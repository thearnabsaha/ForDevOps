name: Deploy MonoRepo Prisma App to AWS VM 

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "${{ secrets.AWS_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to AWS VM
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            git pull origin main
            cd /home/${{ secrets.AWS_USER }}/ForDevOps/"7. monorepo-todo"
            npm install -g pnpm
            pnpm install  
            pnpm run build


            # prisma deployment steps
            cd /home/${{ secrets.AWS_USER }}/ForDevOps/"7. monorepo-todo"/packages/database
            touch .env
            echo "DATABASE_URL='${{ secrets.DATABASE_URL }}'" > .env
            npx prisma generate
            npx prisma migrate deploy


            # Backend deployment steps
            cd /home/${{ secrets.AWS_USER }}/ForDevOps/"7. monorepo-todo"/apps/backend
            git pull origin main
            touch .env
            pm2 describe monorepo-prisma-backend-app > /dev/null && pm2 restart monorepo-prisma-backend-app || pm2 start "npm start" --name monorepo-prisma-backend-app


            # Frontend deployment steps
            cd /home/${{ secrets.AWS_USER }}/ForDevOps/"7. monorepo-todo"/apps/web
            pm2 describe monorepo-prisma-todo-app > /dev/null && pm2 restart monorepo-prisma-todo-app || pm2 start "npm run start -- -p 3004" --name monorepo-prisma-todo-app


            # WebSocket deployment steps
            cd /home/${{ secrets.AWS_USER }}/ForDevOps/"7. monorepo-todo"/apps/ws
            pm2 describe monorepo-ws-todo-app > /dev/null && pm2 restart monorepo-ws-todo-app || pm2 start "npm run start -- -p 3004" --name monorepo-ws-todo-app
          EOF
